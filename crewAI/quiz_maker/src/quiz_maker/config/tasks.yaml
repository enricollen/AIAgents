analyze_webpage:
  description: >
    Extract the content of the webpage content from the URL {url}.
    Extract all the text content from the webpage.
    The language MUST be Italian.
  expected_output: >
    The webpage content.
  agent: web_scraper

clean_web_content:
  description: >
    Process the raw webpage content and remove all non-content elements such as button names, 
    HTML tags, navigation menus, and unrelated text.
    Keep only the meaningful text related to the webpage content.
  expected_output: >
    The cleaned webpage content, retaining only the meaningful text.
  agent: content_cleaner

organize_content:
  description: >
    Identify all distinct topics within the cleaned content and format the document accordingly, assigning an incremental number to each topic 
    (e.g., #1 Topic1, #2 Topic2, etc.).
    Preserve the original text exactly as it is, without rewriting, summarizing, or omitting any part of the content.
    The full length of the original cleaned text MUST be maintained.
    Do not add an introduction, conclusion, or personal comments.
    The output MUST be in txt format.
  expected_output: >
    A well-structured txt document that maintains the complete original text with clearly numbered topics.
  agent: content_organizer
  output_file: output/original_content.txt

divide_topics:
  description: >
    Analyze the provided text document, identify distinct topics, and generate separate files for each theme.
  expected_output: >
    A set of structured text files, each containing content focused on a single topic extracted from the original document.
  agent: topics_divider

create_quiz_questions:
  description: >
    Process each topic file in output/divided_topics:
    1. Files are named as "topic_1.txt", "topic_2.txt", "topic_3.txt"
    2. For each file:
       - Read the content and create 2 multiple-choice questions
       - Use the Text to Questions Converter tool with the EXACT filename (e.g., "topic_1.txt")
       - DO NOT modify the filename format
    3. Create 2 multiple-choice questions with 4 options each
    4. Questions will be automatically saved in JSON format
    
    Requirements for questions:
    - Questions should test understanding of the content
    - Each question must have exactly 4 options
    - Only one option should be correct
    - Questions should be clear and unambiguous
    - Avoid overly obvious or trivial questions
    - The questions MUST be created based ONLY on the content of the topic file

  expected_output: >
    A series of JSON files in the output/questions directory, each containing:
    - Topic number
    - Original content in a question format
    - 2 multiple-choice questions with 4 options each